local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")
local CoreGUI = PlayerGui:WaitForChild("ScreenGui")

local MatchmakingEvent = ReplicatedStorage:WaitForChild("MatchmakingRequest")
local CancelMatchmakingEvent = ReplicatedStorage:WaitForChild("CancelMatchmakingRequest")
local PartyRemotes = ReplicatedStorage:WaitForChild("PartyRemotes")

local MatchMakingFrame = CoreGUI:WaitForChild("MatchMakingFrame")
local SearchingFrame = CoreGUI:WaitForChild("SearchingForMatchFrame")
local PlayButton = CoreGUI:WaitForChild("Button"):WaitForChild("PlayTextButton")
local KickButton = SearchingFrame:WaitForChild("Leave"):WaitForChild("Kick"):WaitForChild("ImageButton")
local TimerText = SearchingFrame:WaitForChild("Timer"):WaitForChild("Title")
local Buttons = CoreGUI:WaitForChild("Buttons")
local PlayerInvites = CoreGUI:WaitForChild("PartyInvites")
local ExitFrame = CoreGUI:WaitForChild("ExitFrame")
local Party = CoreGUI:WaitForChild("Party")
local CurrencyFrame = CoreGUI:WaitForChild("CurrencyFrame")
local Button = CoreGUI:WaitForChild("Button")
CoreGUI.MatchMakingFrame.Visible = false
-- State
local isSearching = false
local timerThread = nil
print("working ")
-- Timer function
local function startTimer()
	local seconds = 0
	TimerText.Text = "00:00"

	timerThread = task.spawn(function()
		while isSearching do
			local min = math.floor(seconds / 60)
			local sec = seconds % 60
			TimerText.Text = string.format("%02d:%02d", min, sec)
			seconds += 1
			task.wait(1)
		end
	end)
end

local function stopTimer()
	isSearching = false
	if timerThread then
		task.cancel(timerThread)
		timerThread = nil
	end
	TimerText.Text = ""
end

-- Toggle menu
local function showMatchmaking()
	MatchMakingFrame.Visible = true
	-- Optional: bump ZIndex in case something overlays
	if MatchMakingFrame.ZIndex < 10 then
		MatchMakingFrame.ZIndex = 10
	end
	print("[MatchmakingUI] Opened matchmaking frame")
end

-- Ensure the button is interactable
PlayButton.Active = true
PlayButton.AutoButtonColor = true

-- Support multiple input types for better device coverage
PlayButton.Activated:Connect(showMatchmaking)
PlayButton.MouseButton1Click:Connect(showMatchmaking)
if PlayButton.TouchTap then
	PlayButton.TouchTap:Connect(showMatchmaking)
end

-- Hook all matchmaking mode buttons (e.g., "1v1", "2v2")
for _, modeFrame in pairs(MatchMakingFrame:GetChildren()) do
	if modeFrame:IsA("Frame") and modeFrame:FindFirstChild("Play2") then
		modeFrame.Play2.Activated:Connect(function()
			local selectedMode = modeFrame.Name

			-- Leader-only check using PartyRemotes
			local members = {}
			local ok, result = pcall(function()
				return PartyRemotes.PartyGetMembers:InvokeServer()
			end)
			if ok and type(result) == "table" and #result > 0 then
				-- Assume leader is first member according to PartyService
				local leader = result[1]
				if leader ~= Player then
					warn("Only the party leader can start matchmaking")
					return
				end
			end

			-- Start search
			MatchmakingEvent:FireServer({ mode = selectedMode })
			MatchMakingFrame.Visible = false
			game.Lighting.ShopBluredBackground.Enabled = false
			game.Lighting.BluredBackground.Enabled = false
			SearchingFrame.Visible = true
			Buttons.Visible = true
			PlayerInvites.Visible = true
			ExitFrame.Visible = true
			Party.Visible = true
			CurrencyFrame.Visible = true
			Button.Visible = false
			MatchMakingFrame.Visible = false
			isSearching = true
			startTimer()
			SearchingFrame.Title.Title.Text = selectedMode

			print("Searching for mode:", selectedMode)
		end)
	end
end

-- Cancel matchmaking
KickButton.Activated:Connect(function()
	if isSearching then
		CancelMatchmakingEvent:FireServer()
		stopTimer()
		SearchingFrame.Visible = false
		CoreGUI.Buttons.State.Value = "Customization"
		CoreGUI.Buttons.Visible = true
		CoreGUI.PlayerInvites.Visible = true
		CoreGUI.ExitFrame.Visible = true
		CoreGUI.Party.Visible = true
		CoreGUI.CurrencyFrame.Visible = true
		CoreGUI.Button.Visible = true
		CoreGUI.MatchMakingFrame.Visible = false
		print("Left matchmaking queue.")
	end
end)
